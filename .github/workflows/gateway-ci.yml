name: Gateway CI - Self-Contained
# VTID: DEV-CICDL-0034
# VT_LAYER: CICDL
# VT_MODULE: GATEWAY

on:
  push:
    branches: [ main, develop, 'vt/**' ]
    paths:
      - 'services/gateway/**'
      - 'packages/**'
      - 'prisma/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'services/gateway/**'
      - 'packages/**'
      - 'prisma/**'

env:
  NODE_VERSION: '20.x'
  VTID: DEV-CICDL-0034
  VT_LAYER: CICDL
  VT_MODULE: GATEWAY

jobs:
  gateway-tests:
    name: Gateway Tests & Validation
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vitana_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.0.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Set Environment
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vitana_test?schema=public" >> $GITHUB_ENV
          echo "SUPABASE_URL=http://localhost:54321" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE=test-mock-key" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Prisma Generate
        run: pnpm exec prisma generate

      - name: Prisma Migrate
        run: pnpm exec prisma migrate deploy || pnpm exec prisma db push --skip-generate

      - name: Prisma Validate
        run: pnpm exec prisma validate

      - name: Test Gateway
        working-directory: services/gateway
        run: pnpm test

      - name: Report Success
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **DEV-CICDL-0034 Gateway CI**: All checks passed!\n\n- ✅ Postgres service: healthy\n- ✅ Prisma: generated, migrated, validated\n- ✅ Gateway tests: passed\n\nSelf-contained CI with pnpm + local Postgres.'
            });
